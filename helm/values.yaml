image:
  pullPolicy: Always

imagePullSecrets:
  - name: github

replicaCount: 1

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 10
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 120

resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 4Gi

livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: 7777
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 15
  successThreshold: 1

readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: 7777
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 15
  successThreshold: 2

service:
  type: ClusterIP
  port: 7777

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

configMap:
  TESSERACT_DEBUG: "true"
  TESSERACT_RUST_LOG: "debug"

secrets:
  TESSERACT_DATABASE_URL: Y2xpY2tob3VzZTovL3JlYWRvbmx5Olp0Zk9BTjFEamhhYkNKZzBqZ2Y1QDM0LjY3LjIwLjE1NTo5MDAwL2hjZl9kYl9kZXY/cG9vbF9tYXg9MzAwJmtlZXBhbGl2ZT0xMjBzCg==

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.org/proxy-connect-timeout: "120s"
    nginx.org/proxy-read-timeout: "120s"
    nginx.org/proxy-buffers: "8 16k"
    nginx.org/proxy-buffer-size: "16k"
    nginx.org/proxy-busy-buffers-size: "64k"
    nginx.org/location-snippets: |
      add_header Access-Control-Allow-Origin *;
  hosts:
    - host: cfc.api.datawheel.us
      paths:
        - /
  tls:
    - secretName: tesseract-api-ingress-tls
      hosts: 
        - cfc.api.datawheel.us